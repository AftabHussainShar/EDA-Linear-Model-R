ColswithNA <- Ames_train[,colSums(is.na(
Ames_train[ , 1:ncol(Ames_train)])) > 0]
ColswithNA$SalePrice <- Ames_train$SalePrice
ColswithNA$log_SalePrice <- Ames_train$log_SalePrice
missing <- naniar::miss_var_summary(ColswithNA)
missing <- missing %>%
filter(n_miss >0) %>%
mutate(pct_miss = round(pct_miss,1))
ggplot(missing,aes(reorder(variable, -pct_miss),y=pct_miss,fill=variable))+
geom_bar(position="dodge", stat = "identity")+
ggtitle("Seasonwise SalePrice from 2006-2010")
numeric_cols <- unlist(lapply(ColswithNA, is.numeric))
colsNA_Numeric <-  ColswithNA[ , numeric_cols]
colnames(colsNA_Numeric)
ggcorr(colsNA_Numeric,label=T)
ggpairs(colsNA_Numeric,
lower=list(continuous=wrap("smooth", colour="blue")),
diag=list(continuous=wrap("barDiag", fill="darkblue")))
drop <- c("LotFrontage")
Ames_train_tidied = Ames_train_tidied[,!(names(Ames_train_tidied) %in% drop)]
Ames_test = Ames_test[,!(names(Ames_test) %in% drop)]
ncol(Ames_train_tidied)
#imputing MasVnrArea NA's with median values
Ames_train_tidied <- Ames_train_tidied %>%
mutate(MasVnrArea=ifelse(is.na(MasVnrArea),
median(MasVnrArea, na.rm=TRUE),
MasVnrArea))
Ames_test <- Ames_test %>%
mutate(MasVnrArea=ifelse(is.na(MasVnrArea),
median(MasVnrArea, na.rm=TRUE),
MasVnrArea))
#categorical columns with NA
categoric_cols <- ColswithNA %>% select(!colnames(colsNA_Numeric))
ncol(categoric_cols)
categoric_cols$SalePrice <- Ames_train$SalePrice
#There are 16 categorical columns
#Further checking how much percentage of missing values we have here.
#which would help us to drop columns if the missing values are 50%
#Missing value ratio in categoric features.
missing <- naniar::miss_var_summary(categoric_cols)
missing <- missing %>%
filter(n_miss >0) %>%
mutate(pct_miss = round(pct_miss,1))
ggplot(missing,aes(reorder(variable, -pct_miss),y=pct_miss,fill=variable))+
geom_bar(position="dodge", stat = "identity")+
ggtitle("Seasonwise SalePrice from 2006-2010")
catcols_withNA_80P <- categoric_cols[, colSums(
is.na(categoric_cols)) >= nrow(categoric_cols) * 0.8]
colnames(catcols_withNA_80P)
catcols_withNA_80P$SalePrice <- Ames_train$SalePrice
catcols_withNA_80P %>%
gather(variable, value,-SalePrice) %>%
ggplot(aes(factor(value), SalePrice, fill = factor(value))) +
geom_boxplot() +
facet_wrap(~variable, scales = "free_x", nrow = 1, strip.position = "bottom") +
theme(panel.spacing = unit(0, "lines"),
panel.border = element_rect(fill = NA),
strip.background = element_blank(),
axis.title.x = element_blank(),
legend.position = "none",
strip.placement = "outside")
drop <- c("Alley","PoolQC","Fence","MiscFeature")
Ames_train_tidied = Ames_train_tidied[,!(names(Ames_train_tidied) %in% drop)]
Ames_test = Ames_test[,!(names(Ames_test) %in% drop)]
ncol(Ames_train_tidied)
ncol(Ames_test)
Cols_Year <- Ames_train %>%
dplyr:: select(grep("Yr", names(Ames_train)),
grep("Year", names(Ames_train)),
grep("*Yr", names(Ames_train)))
for(cols in colnames(Cols_Year)){
if(cols!="YrSold"){
Ames_train_tidied[,cols] <- Ames_train_tidied$YrSold-Ames_train_tidied[,cols]
Ames_test[,cols] <- Ames_test$YrSold-Ames_test[,cols]}}
Cols_Year <- Ames_train_tidied %>%
dplyr:: select(grep("Yr", names(Ames_train_tidied)),
grep("Year", names(Ames_train_tidied)),
grep("*Yr", names(Ames_train_tidied)))
Cols_Year$SalePrice <- Ames_train_tidied$SalePrice
Cols_Year$log_SalePrice <- Ames_train_tidied$log_SalePrice
ggpairs(Cols_Year[-2],
lower=list(continuous=wrap("smooth", colour="green")),
diag=list(continuous=wrap("barDiag", fill="darkgreen")))
#checking the Sale Price versus YearSold
Yrsold_SP <- Cols_Year %>% group_by(YrSold) %>%
summarise(Median_SP=median(SalePrice))
ggplot(Yrsold_SP, aes(x=YrSold, y=Median_SP)) +
geom_line(color="red")+
geom_point()+
ggtitle("Yearwise sold properties Median Sale Price")+
xlab("YearSold")+
ylab("Median of Sale Price")
#Using moSold, SeasonSold column is been created .
Winter <- c(1,2,12)
autumn <- c(9:11)
summmer <- c(6:8)
spring <- c(3:5)
Ames_train_tidied <- Ames_train_tidied %>% mutate(
SeasonSold = ifelse(MoSold %in% autumn, "autumn",
ifelse(MoSold %in% Winter, "Winter",
ifelse(MoSold %in% summmer, "summmer",
"Spring"))))
Ames_test <- Ames_test %>% mutate(
SeasonSold = ifelse(MoSold %in% autumn, "autumn",
ifelse(MoSold %in% Winter, "Winter",
ifelse(MoSold %in% summmer, "summmer",
"Spring"))))
#dropping MoSold as I created SeasonSold
drop <- c("MoSold")
Ames_train_tidied = Ames_train_tidied[,!(names(Ames_train_tidied) %in% drop)]
Ames_test = Ames_test[,!(names(Ames_test) %in% drop)]
ncol(Ames_train_tidied)
Cols_Year$SeasonSold <- Ames_train_tidied$SeasonSold
Cols_Year <- Cols_Year %>% group_by(YrSold,SeasonSold) %>%
mutate(median_SP=median(SalePrice))
ggplot(Cols_Year,aes(x=YrSold,y=SalePrice,fill=SeasonSold))+
geom_bar(position="dodge", stat = "identity")+
ggtitle("Seasonwise SalePrice from 2006-2010")
colSums(is.na(Cols_Year))
#Imputing GarageYrBlt NA's
Ames_train_tidied <- Ames_train_tidied %>%
mutate(GarageYrBlt=ifelse(is.na(GarageYrBlt),
median(GarageYrBlt, na.rm=TRUE),
GarageYrBlt))
Ames_test <- Ames_test %>%
mutate(GarageYrBlt=ifelse(is.na(GarageYrBlt),
median(GarageYrBlt, na.rm=TRUE),
GarageYrBlt))
#Numeric columns Analysis
numeric_cols <- unlist(lapply(Ames_train_tidied, is.numeric))
Cols_allNumrc <-  Ames_train_tidied[ , numeric_cols]
ncol(Cols_allNumrc)
colnames(Cols_allNumrc)
drop <- c("GarageYrBlt","YrSold","YearBuilt" ,
"YearRemodAdd","LotFrontage","MasVnrArea")
Cols_allNumrc = Cols_allNumrc[,!(names(Cols_allNumrc) %in% drop)]
#Finding correlation
ggcorr(Cols_allNumrc,label = T)
#These columns could be dropped as there is no much relation with the target variable.Removing Id column also
drop <- c("MiscVal","PoolArea","ScreenPorch",
"EnclosedPorch","OpenPorchSF","WoodDeckSF",
"KitchenAbvGr","BedroomAbvGr","HalfBath",
"BsmtHalfBath","BsmtFullBath","LowQualFinSF",
"X2ndFlrSF","BsmtUnfSF","BsmtFinSF2","BsmtUnfSF",
"X3SsnPorch","OverallCond","LotArea","MSSubClass")
#Analysing them once before dropping
plot_drop <- Cols_allNumrc %>%
select(drop)
plot_drop$SalePrice <- Ames_train_tidied$SalePrice
ggpairs(plot_drop,
lower=list(continuous=wrap("smooth", colour="green")),
diag=list(continuous=wrap("barDiag", fill="darkgreen")))
#Dropping the numeric cols which are having less tha +/-0.5 correlation with SalePrice after Analysis.
Ames_train_tidied = Ames_train_tidied[,!(names(Ames_train_tidied) %in% drop)]
ncol(Ames_train_tidied)
Ames_test = Ames_test[,!(names(Ames_test) %in% drop)]
ncol(Ames_train_tidied)
Cols_allNumrc = Cols_allNumrc[,!(names(Cols_allNumrc) %in% drop)]
colnames(Cols_allNumrc)
#segregating rest of the numeric columns to continuous and discrete elements
colnames(Cols_allNumrc)
disc_cols <- c("OverallQual",
"FullBath",
"TotRmsAbvGrd","Fireplaces",
"GarageCars")
cols_discrete <- data.frame(Cols_allNumrc) %>% select(disc_cols)
cols_discrete$SalePrice <- Ames_train$SalePrice
ncol(cols_discrete)
#There are 5 columns which are discrete.
ggpairs(cols_discrete,
lower=list(continuous=wrap("smooth", colour="blue")),
diag=list(continuous=wrap("barDiag", fill="darkblue")))
cols_discrete %>%
gather(variable, value,-SalePrice) %>%
ggplot(aes(factor(value), SalePrice, fill = factor(value))) +
geom_boxplot() +
facet_wrap(~variable, scales = "free_x", nrow = 1, strip.position = "bottom") +
theme(panel.spacing = unit(0, "lines"),
panel.border = element_rect(fill = NA),
strip.background = element_blank(),
axis.title.x = element_blank(),
legend.position = "none",
strip.placement = "outside")
#continuous columns
cols_continuous <- Cols_allNumrc %>% select(!disc_cols)
ncol(cols_continuous)
ggpairs(cols_continuous,
lower=list(continuous=wrap("smooth", colour="yellow")),
diag=list(continuous=wrap("barDiag", fill="orange")))
#features in categorical has to be analysed.
cols_categoric <- Ames_train_tidied %>% select_if(negate(is.numeric))
colnames(cols_categoric)
cols_categoric$SalePrice  <- Ames_train_tidied$SalePrice
#Fireplace can be removed as it has highest percentage of missing value Have grouped into 4 groups just for visualisation purpose.
#1st category will have categories what
#I feel are important from the buyers perspective
cols_cat1_imp1 <- c("Street","LotShape","LandContour",
"Utilities","Neighborhood", "BldgType","HouseStyle")
cat1_imp1  <- Ames_train %>% select(cols_cat1_imp1)
cat1_imp1$SalePrice <- Ames_train$SalePrice
cat1_imp1$YrSold <- Ames_train_tidied$YrSold
cat1_imp1 %>%
gather(variable, value,-SalePrice) %>%
ggplot(aes(factor(value), SalePrice, fill = factor(value))) +
geom_boxplot() +
facet_wrap(~variable, scales = "free_x", nrow = 1, strip.position = "bottom") +
theme(panel.spacing = unit(0, "lines"),
panel.border = element_rect(fill = NA),
strip.background = element_blank(),
axis.title.x = element_blank(),
legend.position = "none",
strip.placement = "outside")
cols_cat1_imp2 <- c("RoofStyle","RoofMatl","MasVnrType","ExterQual",
"ExterCond","BsmtCond","KitchenQual","GarageQual",
"SaleType","SaleCondition")
cat1_imp2  <- Ames_train %>% select(cols_cat1_imp2)
cat1_imp2$SalePrice <- Ames_train$SalePrice
cat1_imp2$YrSold <- Ames_train_tidied$YrSold
cat1_imp2 %>%
gather(variable, value,-SalePrice) %>%
ggplot(aes(factor(value), SalePrice, fill = factor(value))) +
geom_boxplot() +
facet_wrap(~variable, scales = "free_x", nrow = 1, strip.position = "bottom") +
theme(panel.spacing = unit(0, "lines"),
panel.border = element_rect(fill = NA),
strip.background = element_blank(),
axis.title.x = element_blank(),
legend.position = "none",
strip.placement = "outside")
drop <- c("BsmtCond","ExterCond", "RoofStyle","RoofMatl",
"HouseStyle", "Street","Utilities" )
Ames_test = Ames_test[,!(names(Ames_test) %in% drop)]
Ames_train_tidied = Ames_train_tidied[,!(names(Ames_train_tidied) %in% drop)]
cols_cat2_misc <- c("MSZoning","LotConfig","LandSlope","Condition1","Condition2",
"Heating","HeatingQC","CentralAir","Electrical","Functional",
"Foundation","TotRmsAbvGrd", "FireplaceQu")
cat2_misc <-  Ames_train_tidied %>% select(cols_cat2_misc)
cat2_misc$SalePrice <- Ames_train_tidied$SalePrice
cat2_misc$YrSold <- Ames_train_tidied$YrSold
cat2_misc %>%
gather(variable, value,-SalePrice) %>%
ggplot(aes(factor(value), SalePrice, fill = factor(value))) +
geom_boxplot() +
facet_wrap(~variable, scales = "free_x", nrow = 1, strip.position = "bottom") +
theme(panel.spacing = unit(0, "lines"),
panel.border = element_rect(fill = NA),
strip.background = element_blank(),
axis.title.x = element_blank(),
legend.position = "none",
strip.placement = "outside")
drop <- c("MSZoning","LotConfig","LandSlope","Condition1","Condition2",
"Heating","HeatingQC","CentralAir","Electrical","Functional",
"Foundation", "FireplaceQu")
Ames_test = Ames_test[,!(names(Ames_test) %in% drop)]
Ames_train_tidied = Ames_train_tidied[,!(names(Ames_train_tidied) %in% drop)]
#External category features
cols_cat3_Ext <- c("PavedDrive", "GarageType","GarageFinish","GarageCond",
"BsmtQual","BsmtExposure","BsmtFinType1",
"BsmtFinType2","Exterior1st","Exterior2nd")
cat3_Ext <-  Ames_train_tidied %>% select(cols_cat3_Ext)
cat3_Ext$SalePrice <- Ames_train_tidied$SalePrice
cat3_Ext$YrSold <- Ames_train_tidied$YrSold
cat3_Ext %>%
gather(variable, value,-SalePrice) %>%
ggplot(aes(factor(value), SalePrice, fill = factor(value))) +
geom_boxplot() +
facet_wrap(~variable, scales = "free_x", nrow = 1, strip.position = "bottom") +
theme(panel.spacing = unit(0, "lines"),
panel.border = element_rect(fill = NA),
strip.background = element_blank(),
axis.title.x = element_blank(),
legend.position = "none",
strip.placement = "outside")
drop <- c("PavedDrive", "GarageType","GarageFinish","GarageCond",
"BsmtExposure","BsmtFinType1",
"BsmtFinType2","Exterior1st","Exterior2nd")
Ames_test = Ames_test[,!(names(Ames_test) %in% drop)]
Ames_train_tidied = Ames_train_tidied[,!(names(Ames_train_tidied) %in% drop)]
#imputing missing values of categorical variables with replacing NA to Missing.
replace_factor_na <- function(x){
x <- as.character(x)
x <- if_else(is.na(x), "Missing", x)
x <- as.factor(x)
}
Ames_train_tidied <- Ames_train_tidied %>%
mutate_if(is.factor, replace_factor_na)
Ames_test <- Ames_test %>%
mutate_if(is.factor, replace_factor_na)
colSums(is.na(Ames_train_tidied))
colSums(is.na(Ames_test))
for (cols in which(sapply(Ames_test, is.numeric))) {
for (row in which(is.na(Ames_test[, cols]))) {
Ames_test[row, cols] <- median(Ames_test[[cols]],
na.rm = TRUE)}}
#Missing values imputation completed
colnames(Ames_train_tidied)
colnames(Ames_test)
Ames_train_tidied %>%
group_by(Neighborhood,YrSold) %>%
summarise(med_SP=median(log_SalePrice)) %>%
ggplot(aes(YrSold,med_SP,color=factor(Neighborhood))) +
geom_point() +
geom_line() +
facet_wrap(~Neighborhood)+
ggtitle("SalePrice based on GarageQual and Garage Age") +
theme(plot.title = element_text(hjust = 0.5)) +
ylab("Sale Price $")
Ames_train_tidied %>%
ggplot(aes(x = SeasonSold , y = Totl_Area,col = log_SalePrice)) +
geom_line()+
geom_point() +
facet_wrap(~ YrSold , scales = "free") +
scale_color_continuous(name="Sale Price in $",
low="yellow",
high="darkblue")+
theme_light()
ggplot(Ames_train_tidied,aes(x=SalePrice))+
geom_histogram(aes(fill=SaleCondition),
position=position_stack(), binwidth = 10000,
colour="yellow")+
ggtitle("Median Saleprice based on SaleCondition")
ggplot(Ames_train_tidied,aes(SaleCondition,SalePrice,fill=SaleCondition))+
geom_boxplot()+
ggtitle("Median Saleprice across SaleCondition")
ggplot(Ames_train_tidied, aes(x = YrSold,
y = log_SalePrice, fill = factor(GarageQual))) +
geom_bar(position = "stack", stat = "identity") +
ggtitle("Property sale Price in $ by GarageQuality") +
ylab("Sale Price $") +
xlab("Year Sold") +
theme(plot.title = element_text(size = 14, face = "bold", hjust = 0.5),
axis.title.x = element_text(size = 12, hjust = 0.5),
axis.title.y = element_text(size = 12, hjust = 0.5),
legend.position ="right",
axis.text.x = element_text(angle = 30,
vjust = 1,
size = 6,
hjust = 1)) +
scale_fill_discrete(name="Garage Quality")
Ames_train_tidied %>%
group_by(Neighborhood, BldgType,YrSold) %>%
summarise(med_SP= median(SalePrice)) %>%
ggplot(aes(YrSold, med_SP, fill = BldgType)) +
geom_bar(position="dodge", stat = "identity") +
facet_wrap( ~ Neighborhood ) +
ggtitle("SalePrice from 2006-2010 based on Neighborhood and BldgType") +
theme(plot.title = element_text(hjust = 0.5)) +
ylab("Sale Price $")
ggplot(Ames_train_tidied,aes(x=OverallQual,y=log_SalePrice))+
geom_point()
model <- lm(Ames_train_tidied$log_SalePrice ~ Ames_train_tidied$OverallQual,
Ames_train_tidied)
summary(model)
####################----------Linear Modeling------------######################
#Removing Id column from both train and test data set
drop <- c("Id")
Ames_train_tidied = Ames_train_tidied[,!(names(Ames_train_tidied) %in% drop)]
Ames_test = Ames_test[,!(names(Ames_test) %in% drop)]
ncol(Ames_train_tidied)
ncol(Ames_test)
colnames(Ames_train_tidied)
colnames(Ames_test)
model_Ames_train_tidied<- lm(Ames_train_tidied$log_SalePrice ~ Ames_train_tidied$LotShape +
Ames_train_tidied$Neighborhood +
Ames_train_tidied$BldgType +
Ames_train_tidied$OverallQual +
Ames_train_tidied$FullBath +
Ames_train_tidied$KitchenQual +
Ames_train_tidied$TotRmsAbvGrd +
Ames_train_tidied$Fireplaces+
Ames_train_tidied$GarageCars+
Ames_train_tidied$GarageArea +
Ames_train_tidied$YrSold +
Ames_train_tidied$Totl_Area +
Ames_train_tidied$SeasonSold,Ames_train_tidied)
summary(model_Ames_train_tidied)
mode2_Ames_train_tidied<- lm(Ames_train_tidied$log_SalePrice ~ Ames_train_tidied$LotShape +
Ames_train_tidied$LandContour +
Ames_train_tidied$Neighborhood +
Ames_train_tidied$BldgType +
Ames_train_tidied$OverallQual +
Ames_train_tidied$YearBuilt +
Ames_train_tidied$YearRemodAdd +
Ames_train_tidied$MasVnrType +
Ames_train_tidied$MasVnrArea +
Ames_train_tidied$ExterQual +
Ames_train_tidied$BsmtQual +
Ames_train_tidied$BsmtFinSF1 +
Ames_train_tidied$TotalBsmtSF +
Ames_train_tidied$X1stFlrSF +
Ames_train_tidied$GrLivArea +
Ames_train_tidied$FullBath +
Ames_train_tidied$KitchenQual +
Ames_train_tidied$TotRmsAbvGrd +
Ames_train_tidied$Fireplaces+
Ames_train_tidied$GarageYrBlt+
Ames_train_tidied$GarageCars+
Ames_train_tidied$GarageArea +
Ames_train_tidied$YrSold +
Ames_train_tidied$Totl_Area ,Ames_train_tidied)
summary(mode2_Ames_train_tidied)
mode3_Ames_train_tidied<- lm(Ames_train_tidied$log_SalePrice ~ Ames_train_tidied$OverallQual +
Ames_train_tidied$YearBuilt +
Ames_train_tidied$Totl_Area +
Ames_train_tidied$YearRemodAdd +
Ames_train_tidied$MasVnrArea +
Ames_train_tidied$BsmtFinSF1 +
Ames_train_tidied$TotalBsmtSF +
Ames_train_tidied$GrLivArea +
Ames_train_tidied$X1stFlrSF +
Ames_train_tidied$FullBath +
Ames_train_tidied$Fireplaces +
Ames_train_tidied$GarageYrBlt +
Ames_train_tidied$YrSold +
Ames_train_tidied$BldgType +
Ames_train_tidied$OverallQual +
Ames_train_tidied$MasVnrType +
Ames_train_tidied$ExterQual +
Ames_train_tidied$KitchenQual+
Ames_train_tidied$GarageQual+
Ames_train_tidied$SaleType+
Ames_train_tidied$SaleCondition,Ames_train_tidied)
summary(mode3_Ames_train_tidied)
mode4_Ames_train_tidied<- lm(Ames_train_tidied$log_SalePrice ~ Ames_train_tidied$LotShape +
Ames_train_tidied$LandContour +
Ames_train_tidied$Neighborhood +
Ames_train_tidied$BldgType +
Ames_train_tidied$OverallQual +
Ames_train_tidied$YearBuilt +
Ames_train_tidied$YearRemodAdd +
Ames_train_tidied$MasVnrType +
Ames_train_tidied$MasVnrArea +
Ames_train_tidied$ExterQual +
Ames_train_tidied$BsmtQual +
Ames_train_tidied$BsmtFinSF1 +
Ames_train_tidied$TotalBsmtSF +
Ames_train_tidied$X1stFlrSF +
Ames_train_tidied$GrLivArea +
Ames_train_tidied$FullBath +
Ames_train_tidied$KitchenQual +
Ames_train_tidied$TotRmsAbvGrd +
Ames_train_tidied$Fireplaces+
Ames_train_tidied$GarageYrBlt+
Ames_train_tidied$GarageCars+
Ames_train_tidied$GarageArea +
Ames_train_tidied$GarageQual +
Ames_train_tidied$YrSold +
Ames_train_tidied$SaleType +
Ames_train_tidied$SaleCondition +
Ames_train_tidied$Totl_Area +
Ames_train_tidied$SeasonSold,Ames_train_tidied)
outlierTest(mode4_Ames_train_tidied)
#There are few outliers.
summary(mode4_Ames_train_tidied)
plot(mode4_Ames_train_tidied,1)
plot(mode4_Ames_train_tidied,3)
plot(mode4_Ames_train_tidied,2)
plot(mode4_Ames_train_tidied,4)
model_Ames_test<- lm(Ames_test$log_SalePrice ~ Ames_test$LotShape +
Ames_test$LandContour +
Ames_test$Neighborhood +
Ames_test$BldgType +
Ames_test$OverallQual +
Ames_test$YearBuilt +
Ames_test$YearRemodAdd +
Ames_test$MasVnrType +
Ames_test$MasVnrArea +
Ames_test$ExterQual +
Ames_test$BsmtQual +
Ames_test$BsmtFinSF1 +
Ames_test$TotalBsmtSF +
Ames_test$X1stFlrSF +
Ames_test$GrLivArea +
Ames_test$FullBath +
Ames_test$KitchenQual +
Ames_test$TotRmsAbvGrd +
Ames_test$Fireplaces+
Ames_test$GarageYrBlt+
Ames_test$GarageCars+
Ames_test$GarageArea +
Ames_test$GarageQual +
Ames_test$YrSold +
Ames_test$SaleType +
Ames_test$SaleCondition +
Ames_test$Totl_Area +
Ames_test$SeasonSold,Ames_test)
summary(model_Ames_test)
plot(model_Ames_test,1)
plot(model_Ames_test,3)
rmse(mode4_Ames_train_tidied,Ames_train_tidied)
rmse(model_Ames_test,Ames_test)
plot(model_Ames_test,2)
plot(model_Ames_test,4)
lmpred <- predict(model_Ames_test, newdata = Ames_test)
lmdata <- Ames_test %>% mutate(y = log_SalePrice) %>%
mutate(ybar = lmpred) %>% mutate(diff = abs(y - ybar))
badlmdata <- lmdata %>% filter(diff > 1.5) %>% arrange(desc(diff))
lmresiduals <- ggplot(lmdata, aes(x = y, y = y-ybar), col = diff) +
geom_point(aes(x = y, y = y-ybar, color = diff)) +
geom_point(data = badlmdata, colour="red") +
scale_color_gradient(name = "|y - ybar|", limits = c(0, 1.5)) +
geom_abline(slope = 1, intercept = 0) +
xlab("y") +
ylab("y-ybar") +
ggtitle("Linear model residuals") +
theme(plot.title = element_text(size = 14, face = "bold", hjust = 0.5),
axis.title.x = element_text(size = 12, hjust = 0.5),
axis.title.y = element_text(size = 12, hjust = 0.5),
legend.position = "right",
legend.spacing.y = unit(0.5, 'cm'))
lmresiduals
sqrt(mean((Ames_test$log_SalePrice - lmpred) ^ 2))
